JOIN

↓↓↓↓↓↓

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia:
SELECT `students`.`name`, `students`.`surname` FROM `students` INNER JOIN `degrees` ON `degrees`.`id` = `students`.`degree_id` WHERE `degrees`.`name` = 'corso di laurea in economia';

2. Selezionare tutti i corsi di Laurea Magistrale nel dipartimento di Neuroscienze:
SELECT DISTINCT `degrees`.`name` FROM `courses` INNER JOIN `degrees` ON `degrees`.`id` = `degree_id` INNER JOIN `departments` ON `departments`.`id` = `degrees`.`department_id` WHERE `departments`.`name` = 'dipartimento di Neuroscienze' AND `degrees`.`name` LIKE '%magistrale%';

3. Selezioniamo tutti i corsi in cui insegna Fulvio Amato (ID=44):
SELECT `courses`.`name`, `courses`.`cfu` FROM `courses` INNER JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id` INNER JOIN `teachers` ON `teachers`.`id` = `course_teacher`.`teacher_id` WHERE `teachers`.`id` = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome:
SELECT `students`.`name`, `students`.`surname`, `degrees`.`name` AS 'degree', `departments`.`name` AS 'department' FROM `students` INNER JOIN `degrees` ON `degrees`.`id` = `students`.`degree_id` INNER JOIN `departments` ON `departments`.`id` = `degrees`.`department_id` ORDER BY `students`.`surname`, `students`.`name`;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT `degrees`.`name` AS 'Degree', `courses`.`name` AS 'Course', `teachers`.`name` AS 'Teacher_name', `teachers`.`surname` AS 'Teacher_surname' FROM `degrees` INNER JOIN `courses` ON `courses`.`degree_id` = `degrees`.`id` INNER JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id` INNER JOIN `teachers` ON `teachers`.`id` = `course_teacher`.`teacher_id`

6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54):
SELECT DISTINCT teachers.* FROM teachers INNER JOIN course_teacher ON teachers.id = course_teacher.teacher_id INNER JOIN courses ON courses.id = course_teacher.course_id INNER JOIN degrees ON degrees.id = courses.degree_id INNER JOIN departments ON departments.id = degrees.department_id WHERE departments.name = 'dipartimento di matematica'

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.
SELECT COUNT(exam_student.vote) AS 'attempts', MAX(exam_student.vote), exams.id AS 'exam', students.name AS 'student_name', students.surname AS 'student_surname' FROM students INNER JOIN exam_student ON students.id = exam_student.student_id INNER JOIN exams ON exams.id = exam_student.exam_id GROUP BY exams.id HAVING MAX(exam_student.vote) >= 18 ORDER BY students.surname, students.name;